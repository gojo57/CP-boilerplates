{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"": {
		"prefix": "boilerplate cpp",
		"body": [
		  "#include<bits/stdc++.h>",
		  "#define pb push_back",
		  "#define all(x) x.begin(),x.end()",
		  "#define rall(x) x.rbegin(),x.rend()",
		  "#define ones(x) __builtin_popcountll(x)",
		  "#define int long long",
		  "#define pii pair<int,int>",
		  "using namespace std;",
		  "",
		  "signed main()",
		  "{",
		  "    ios_base::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "    cout.tie(NULL);",
		  "",
		  "    int test; cin>>test;",
		  "    while(test--)",
		  "    {",
		  "        int n; cin>>n;",
		  "        vector <int> v(n);",
		  "        for(auto &i:v) cin>>i;",
		  "        $0",
		  "    }",
		  "    return 0;",
		  "}"
		],
		"description": "cpp boilerplate code"
	  }
}
